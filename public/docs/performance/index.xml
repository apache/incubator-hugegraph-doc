<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HugeGraph – PERFORMANCE</title>
    <link>/docs/performance/</link>
    <description>Recent content in PERFORMANCE on HugeGraph</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: HugeGraph BenchMark Performance</title>
      <link>/docs/performance/hugegraph-benchmark-0.5.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/performance/hugegraph-benchmark-0.5.6/</guid>
      <description>
        
        
        &lt;h3 id=&#34;1-测试环境&#34;&gt;1 测试环境&lt;/h3&gt;
&lt;h4 id=&#34;11-硬件信息&#34;&gt;1.1 硬件信息&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CPU&lt;/th&gt;
&lt;th&gt;Memory&lt;/th&gt;
&lt;th&gt;网卡&lt;/th&gt;
&lt;th&gt;磁盘&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;48 Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz&lt;/td&gt;
&lt;td&gt;128G&lt;/td&gt;
&lt;td&gt;10000Mbps&lt;/td&gt;
&lt;td&gt;750GB SSD&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;12-软件信息&#34;&gt;1.2 软件信息&lt;/h4&gt;
&lt;h5 id=&#34;121-测试用例&#34;&gt;1.2.1 测试用例&lt;/h5&gt;
&lt;p&gt;测试使用&lt;a href=&#34;https://github.com/socialsensor/graphdb-benchmarks&#34;&gt;graphdb-benchmark&lt;/a&gt;，一个图数据库测试集。该测试集主要包含4类测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Massive Insertion，批量插入顶点和边，一定数量的顶点或边一次性提交&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Single Insertion，单条插入，每个顶点或者每条边立即提交&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Query，主要是图数据库的基本查询操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find Neighbors，查询所有顶点的邻居&lt;/li&gt;
&lt;li&gt;Find Adjacent Nodes，查询所有边的邻接顶点&lt;/li&gt;
&lt;li&gt;Find Shortest Path，查询第一个顶点到100个随机顶点的最短路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clustering，基于Louvain Method的社区发现算法&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;122-测试数据集&#34;&gt;1.2.2 测试数据集&lt;/h5&gt;
&lt;p&gt;测试使用人造数据和真实数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MIW、SIW和QW使用SNAP数据集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/email-Enron.html&#34;&gt;Enron Dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/amazon0601.html&#34;&gt;Amazon dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/com-Youtube.html&#34;&gt;Youtube dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/com-LiveJournal.html&#34;&gt;LiveJournal dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CW使用&lt;a href=&#34;https://sites.google.com/site/andrealancichinetti/files&#34;&gt;LFR-Benchmark generator&lt;/a&gt;生成的人造数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;本测试用到的数据集规模&#34;&gt;本测试用到的数据集规模&lt;/h6&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;vertex数目&lt;/th&gt;
&lt;th&gt;edge数目&lt;/th&gt;
&lt;th&gt;文件大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;email-enron.txt&lt;/td&gt;
&lt;td&gt;36,691&lt;/td&gt;
&lt;td&gt;367,661&lt;/td&gt;
&lt;td&gt;4MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;com-youtube.ungraph.txt&lt;/td&gt;
&lt;td&gt;1,157,806&lt;/td&gt;
&lt;td&gt;2,987,624&lt;/td&gt;
&lt;td&gt;38.7MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amazon0601.txt&lt;/td&gt;
&lt;td&gt;403,393&lt;/td&gt;
&lt;td&gt;3,387,388&lt;/td&gt;
&lt;td&gt;47.9MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;com-lj.ungraph.txt&lt;/td&gt;
&lt;td&gt;3997961&lt;/td&gt;
&lt;td&gt;34681189&lt;/td&gt;
&lt;td&gt;479MB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;13-服务配置&#34;&gt;1.3 服务配置&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HugeGraph版本：0.5.6，RestServer和Gremlin Server和backends都在同一台服务器上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RocksDB版本：rocksdbjni-5.8.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Titan版本：0.5.4, 使用thrift+Cassandra模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cassandra版本：cassandra-3.10，commitlog和data共用SSD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Neo4j版本：2.0.1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;graphdb-benchmark适配的Titan版本为0.5.4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-测试结果&#34;&gt;2 测试结果&lt;/h3&gt;
&lt;h4 id=&#34;21-batch插入性能&#34;&gt;2.1 Batch插入性能&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(30w)&lt;/th&gt;
&lt;th&gt;amazon0601(300w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(300w)&lt;/th&gt;
&lt;th&gt;com-lj.ungraph(3000w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HugeGraph&lt;/td&gt;
&lt;td&gt;0.629&lt;/td&gt;
&lt;td&gt;5.711&lt;/td&gt;
&lt;td&gt;5.243&lt;/td&gt;
&lt;td&gt;67.033&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;10.15&lt;/td&gt;
&lt;td&gt;108.569&lt;/td&gt;
&lt;td&gt;150.266&lt;/td&gt;
&lt;td&gt;1217.944&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Neo4j&lt;/td&gt;
&lt;td&gt;3.884&lt;/td&gt;
&lt;td&gt;18.938&lt;/td&gt;
&lt;td&gt;24.890&lt;/td&gt;
&lt;td&gt;281.537&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;quot;（）&amp;ldquo;中数据是数据规模，以边为单位&lt;/li&gt;
&lt;li&gt;表中数据是批量插入的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB插入amazon0601数据集的300w条边，花费5.711s&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;结论&#34;&gt;结论&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;批量插入性能 HugeGraph(RocksDB) &amp;gt; Neo4j &amp;gt; Titan(thrift+Cassandra)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;22-遍历性能&#34;&gt;2.2 遍历性能&lt;/h4&gt;
&lt;h5 id=&#34;221-术语说明&#34;&gt;2.2.1 术语说明&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;FN(Find Neighbor), 遍历所有vertex, 根据vertex查邻接edge, 通过edge和vertex查other vertex&lt;/li&gt;
&lt;li&gt;FA(Find Adjacent), 遍历所有edge，根据edge获得source vertex和target vertex&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;222-fn性能&#34;&gt;2.2.2 FN性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(3.6w)&lt;/th&gt;
&lt;th&gt;amazon0601(40w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(120w)&lt;/th&gt;
&lt;th&gt;com-lj.ungraph(400w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HugeGraph&lt;/td&gt;
&lt;td&gt;4.072&lt;/td&gt;
&lt;td&gt;45.118&lt;/td&gt;
&lt;td&gt;66.006&lt;/td&gt;
&lt;td&gt;609.083&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;8.084&lt;/td&gt;
&lt;td&gt;92.507&lt;/td&gt;
&lt;td&gt;184.543&lt;/td&gt;
&lt;td&gt;1099.371&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Neo4j&lt;/td&gt;
&lt;td&gt;2.424&lt;/td&gt;
&lt;td&gt;10.537&lt;/td&gt;
&lt;td&gt;11.609&lt;/td&gt;
&lt;td&gt;106.919&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;rdquo;（）&amp;ldquo;中数据是数据规模，以顶点为单位&lt;/li&gt;
&lt;li&gt;表中数据是遍历顶点花费的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB后端遍历amazon0601的所有顶点，并查找邻接边和另一顶点，总共耗时45.118s&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;223-fa性能&#34;&gt;2.2.3 FA性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(30w)&lt;/th&gt;
&lt;th&gt;amazon0601(300w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(300w)&lt;/th&gt;
&lt;th&gt;com-lj.ungraph(3000w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HugeGraph&lt;/td&gt;
&lt;td&gt;1.540&lt;/td&gt;
&lt;td&gt;10.764&lt;/td&gt;
&lt;td&gt;11.243&lt;/td&gt;
&lt;td&gt;151.271&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;7.361&lt;/td&gt;
&lt;td&gt;93.344&lt;/td&gt;
&lt;td&gt;169.218&lt;/td&gt;
&lt;td&gt;1085.235&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Neo4j&lt;/td&gt;
&lt;td&gt;1.673&lt;/td&gt;
&lt;td&gt;4.775&lt;/td&gt;
&lt;td&gt;4.284&lt;/td&gt;
&lt;td&gt;40.507&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;rdquo;（）&amp;ldquo;中数据是数据规模，以边为单位&lt;/li&gt;
&lt;li&gt;表中数据是遍历边花费的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB后端遍历amazon0601的所有边，并查询每条边的两个顶点，总共耗时10.764s&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;结论-1&#34;&gt;结论&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;遍历性能 Neo4j &amp;gt; HugeGraph(RocksDB) &amp;gt; Titan(thrift+Cassandra)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;23-hugegraph-图常用分析方法性能&#34;&gt;2.3 HugeGraph-图常用分析方法性能&lt;/h4&gt;
&lt;h5 id=&#34;术语说明&#34;&gt;术语说明&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;FS(Find Shortest Path), 寻找最短路径&lt;/li&gt;
&lt;li&gt;K-neighbor，从起始vertex出发，通过K跳边能够到达的所有顶点, 包括1, 2, 3&amp;hellip;(K-1), K跳边可达vertex&lt;/li&gt;
&lt;li&gt;K-out, 从起始vertex出发，恰好经过K跳out边能够到达的顶点&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;fs性能&#34;&gt;FS性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(30w)&lt;/th&gt;
&lt;th&gt;amazon0601(300w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(300w)&lt;/th&gt;
&lt;th&gt;com-lj.ungraph(3000w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HugeGraph&lt;/td&gt;
&lt;td&gt;0.494&lt;/td&gt;
&lt;td&gt;0.103&lt;/td&gt;
&lt;td&gt;3.364&lt;/td&gt;
&lt;td&gt;8.155&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;11.818&lt;/td&gt;
&lt;td&gt;0.239&lt;/td&gt;
&lt;td&gt;377.709&lt;/td&gt;
&lt;td&gt;575.678&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Neo4j&lt;/td&gt;
&lt;td&gt;1.719&lt;/td&gt;
&lt;td&gt;1.800&lt;/td&gt;
&lt;td&gt;1.956&lt;/td&gt;
&lt;td&gt;8.530&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;rdquo;（）&amp;ldquo;中数据是数据规模，以边为单位&lt;/li&gt;
&lt;li&gt;表中数据是找到&lt;strong&gt;从第一个顶点出发到达随机选择的100个顶点的最短路径&lt;/strong&gt;的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB后端在图amazon0601中查找第一个顶点到100个随机顶点的最短路径，总共耗时0.103s&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;结论-2&#34;&gt;结论&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;在数据规模小或者顶点关联关系少的场景下，HugeGraph性能优于Neo4j和Titan&lt;/li&gt;
&lt;li&gt;随着数据规模增大且顶点的关联度增高，HugeGraph与Neo4j性能趋近，都远高于Titan&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;k-neighbor性能&#34;&gt;K-neighbor性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;顶点&lt;/th&gt;
&lt;th&gt;深度&lt;/th&gt;
&lt;th&gt;一度&lt;/th&gt;
&lt;th&gt;二度&lt;/th&gt;
&lt;th&gt;三度&lt;/th&gt;
&lt;th&gt;四度&lt;/th&gt;
&lt;th&gt;五度&lt;/th&gt;
&lt;th&gt;六度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.031s&lt;/td&gt;
&lt;td&gt;0.033s&lt;/td&gt;
&lt;td&gt;0.048s&lt;/td&gt;
&lt;td&gt;0.500s&lt;/td&gt;
&lt;td&gt;11.27s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.027s&lt;/td&gt;
&lt;td&gt;0.034s&lt;/td&gt;
&lt;td&gt;0.115&lt;/td&gt;
&lt;td&gt;1.36s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.039s&lt;/td&gt;
&lt;td&gt;0.027s&lt;/td&gt;
&lt;td&gt;0.052s&lt;/td&gt;
&lt;td&gt;0.511s&lt;/td&gt;
&lt;td&gt;10.96s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph-Server的JVM内存设置为32GB，数据量过大时会出现OOM&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;k-out性能&#34;&gt;K-out性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;顶点&lt;/th&gt;
&lt;th&gt;深度&lt;/th&gt;
&lt;th&gt;一度&lt;/th&gt;
&lt;th&gt;二度&lt;/th&gt;
&lt;th&gt;三度&lt;/th&gt;
&lt;th&gt;四度&lt;/th&gt;
&lt;th&gt;五度&lt;/th&gt;
&lt;th&gt;六度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.054s&lt;/td&gt;
&lt;td&gt;0.057s&lt;/td&gt;
&lt;td&gt;0.109s&lt;/td&gt;
&lt;td&gt;0.526s&lt;/td&gt;
&lt;td&gt;3.77s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;度&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;133&lt;/td&gt;
&lt;td&gt;2453&lt;/td&gt;
&lt;td&gt;50,830&lt;/td&gt;
&lt;td&gt;1,128,688&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.032s&lt;/td&gt;
&lt;td&gt;0.042s&lt;/td&gt;
&lt;td&gt;0.136s&lt;/td&gt;
&lt;td&gt;1.25s&lt;/td&gt;
&lt;td&gt;20.62s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;度&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;211&lt;/td&gt;
&lt;td&gt;4944&lt;/td&gt;
&lt;td&gt;113150&lt;/td&gt;
&lt;td&gt;2,629,970&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.039s&lt;/td&gt;
&lt;td&gt;0.045s&lt;/td&gt;
&lt;td&gt;0.053s&lt;/td&gt;
&lt;td&gt;1.10s&lt;/td&gt;
&lt;td&gt;2.92s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;度&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;2555&lt;/td&gt;
&lt;td&gt;50825&lt;/td&gt;
&lt;td&gt;1,070,230&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph-Server的JVM内存设置为32GB，数据量过大时会出现OOM&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;结论-3&#34;&gt;结论&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;FS场景，HugeGraph性能优于Neo4j和Titan&lt;/li&gt;
&lt;li&gt;K-neighbor和K-out场景，HugeGraph能够实现在5度范围内秒级返回结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;24-图综合性能测试-cw&#34;&gt;2.4 图综合性能测试-CW&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据库&lt;/th&gt;
&lt;th&gt;规模1000&lt;/th&gt;
&lt;th&gt;规模5000&lt;/th&gt;
&lt;th&gt;规模10000&lt;/th&gt;
&lt;th&gt;规模20000&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HugeGraph(core)&lt;/td&gt;
&lt;td&gt;20.804&lt;/td&gt;
&lt;td&gt;242.099&lt;/td&gt;
&lt;td&gt;744.780&lt;/td&gt;
&lt;td&gt;1700.547&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;45.790&lt;/td&gt;
&lt;td&gt;820.633&lt;/td&gt;
&lt;td&gt;2652.235&lt;/td&gt;
&lt;td&gt;9568.623&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Neo4j&lt;/td&gt;
&lt;td&gt;5.913&lt;/td&gt;
&lt;td&gt;50.267&lt;/td&gt;
&lt;td&gt;142.354&lt;/td&gt;
&lt;td&gt;460.880&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;规模&amp;quot;以顶点为单位&lt;/li&gt;
&lt;li&gt;表中数据是社区发现完成需要的时间，单位是s，例如HugeGraph使用RocksDB后端在规模10000的数据集，社区聚合不再变化，需要耗时744.780s&lt;/li&gt;
&lt;li&gt;CW测试是CRUD的综合评估&lt;/li&gt;
&lt;li&gt;该测试中HugeGraph跟Titan一样，没有通过client，直接对core操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;结论-4&#34;&gt;结论&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;社区聚类算法性能 Neo4j &amp;gt; HugeGraph &amp;gt; Titan&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: HugeGraph-API Performance</title>
      <link>/docs/performance/api-preformance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/performance/api-preformance/</guid>
      <description>
        
        
        &lt;p&gt;HugeGraph API性能测试主要测试HugeGraph-Server对RESTful API请求的并发处理能力，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顶点/边的单条插入&lt;/li&gt;
&lt;li&gt;顶点/边的批量插入&lt;/li&gt;
&lt;li&gt;顶点/边的查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HugeGraph的每个发布版本的RESTful API的性能测试情况可以参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/docs/performance/api-preformance/hugegraph-api-0.5.6-rocksdb/&#34;&gt;v0.5.6 stand-alone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/performance/api-preformance/hugegraph-api-0.5.6-cassandra/&#34;&gt;v0.5.6 cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/performance/api-preformance/hugegraph-api-0.4.4/&#34;&gt;v0.4.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/performance/api-preformance/hugegraph-api-0.2/&#34;&gt;v0.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;之前的版本只提供HugeGraph所支持的后端种类中性能最好的API性能测试，从0.5.6版本开始，分别提供了单机和集群的性能情况&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: HugeGraph-Loader Performance</title>
      <link>/docs/performance/hugegraph-loader-performance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/performance/hugegraph-loader-performance/</guid>
      <description>
        
        
        &lt;h2 id=&#34;使用场景&#34;&gt;使用场景&lt;/h2&gt;
&lt;p&gt;当要批量插入的图数据（包括顶点和边）条数为billion级别及以下，或者总数据量小于TB时，可以采用&lt;a href=&#34;/docs/quickstart/hugegraph-loader&#34;&gt;HugeGraph-Loader&lt;/a&gt;工具持续、高速导入图数据&lt;/p&gt;
&lt;h2 id=&#34;性能&#34;&gt;性能&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;测试均采用网址数据的边数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;rocksdb单机性能&#34;&gt;RocksDB单机性能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;关闭label index，22.8w edges/s&lt;/li&gt;
&lt;li&gt;开启label index，15.3w edges/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cassandra集群性能&#34;&gt;Cassandra集群性能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;默认开启label index，6.3w edges/s&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>/docs/performance/hugegraph-benchmark-0.4.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/performance/hugegraph-benchmark-0.4.4/</guid>
      <description>
        
        
        &lt;h3 id=&#34;1-测试环境&#34;&gt;1 测试环境&lt;/h3&gt;
&lt;h4 id=&#34;11-硬件信息&#34;&gt;1.1 硬件信息&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CPU&lt;/th&gt;
&lt;th&gt;Memory&lt;/th&gt;
&lt;th&gt;网卡&lt;/th&gt;
&lt;th&gt;磁盘&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;48 Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz&lt;/td&gt;
&lt;td&gt;128G&lt;/td&gt;
&lt;td&gt;10000Mbps&lt;/td&gt;
&lt;td&gt;750GB SSD&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;12-软件信息&#34;&gt;1.2 软件信息&lt;/h4&gt;
&lt;h5 id=&#34;121-测试用例&#34;&gt;1.2.1 测试用例&lt;/h5&gt;
&lt;p&gt;测试使用&lt;a href=&#34;https://github.com/socialsensor/graphdb-benchmarks&#34;&gt;graphdb-benchmark&lt;/a&gt;，一个图数据库测试集。该测试集主要包含4类测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Massive Insertion，批量插入顶点和边，一定数量的顶点或边一次性提交&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Single Insertion，单条插入，每个顶点或者每条边立即提交&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Query，主要是图数据库的基本查询操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find Neighbors，查询所有顶点的邻居&lt;/li&gt;
&lt;li&gt;Find Adjacent Nodes，查询所有边的邻接顶点&lt;/li&gt;
&lt;li&gt;Find Shortest Path，查询第一个顶点到100个随机顶点的最短路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clustering，基于Louvain Method的社区发现算法&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;122-测试数据集&#34;&gt;1.2.2 测试数据集&lt;/h5&gt;
&lt;p&gt;测试使用人造数据和真实数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MIW、SIW和QW使用SNAP数据集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/email-Enron.html&#34;&gt;Enron Dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/amazon0601.html&#34;&gt;Amazon dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/com-Youtube.html&#34;&gt;Youtube dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://snap.stanford.edu/data/com-LiveJournal.html&#34;&gt;LiveJournal dataset&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CW使用&lt;a href=&#34;https://sites.google.com/site/andrealancichinetti/files&#34;&gt;LFR-Benchmark generator&lt;/a&gt;生成的人造数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;本测试用到的数据集规模&#34;&gt;本测试用到的数据集规模&lt;/h6&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;vertex数目&lt;/th&gt;
&lt;th&gt;edge数目&lt;/th&gt;
&lt;th&gt;文件大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;email-enron.txt&lt;/td&gt;
&lt;td&gt;36,691&lt;/td&gt;
&lt;td&gt;367,661&lt;/td&gt;
&lt;td&gt;4MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;com-youtube.ungraph.txt&lt;/td&gt;
&lt;td&gt;1,157,806&lt;/td&gt;
&lt;td&gt;2,987,624&lt;/td&gt;
&lt;td&gt;38.7MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amazon0601.txt&lt;/td&gt;
&lt;td&gt;403,393&lt;/td&gt;
&lt;td&gt;3,387,388&lt;/td&gt;
&lt;td&gt;47.9MB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;13-服务配置&#34;&gt;1.3 服务配置&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph版本：0.4.4，RestServer和Gremlin Server和backends都在同一台服务器上&lt;/li&gt;
&lt;li&gt;Cassandra版本：cassandra-3.10，commitlog和data共用SSD&lt;/li&gt;
&lt;li&gt;RocksDB版本：rocksdbjni-5.8.6&lt;/li&gt;
&lt;li&gt;Titan版本：0.5.4, 使用thrift+Cassandra模式&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;graphdb-benchmark适配的Titan版本为0.5.4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-测试结果&#34;&gt;2 测试结果&lt;/h3&gt;
&lt;h4 id=&#34;21-batch插入性能&#34;&gt;2.1 Batch插入性能&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(30w)&lt;/th&gt;
&lt;th&gt;amazon0601(300w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(300w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;9.516&lt;/td&gt;
&lt;td&gt;88.123&lt;/td&gt;
&lt;td&gt;111.586&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RocksDB&lt;/td&gt;
&lt;td&gt;2.345&lt;/td&gt;
&lt;td&gt;14.076&lt;/td&gt;
&lt;td&gt;16.636&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cassandra&lt;/td&gt;
&lt;td&gt;11.930&lt;/td&gt;
&lt;td&gt;108.709&lt;/td&gt;
&lt;td&gt;101.959&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;3.077&lt;/td&gt;
&lt;td&gt;15.204&lt;/td&gt;
&lt;td&gt;13.841&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;quot;（）&amp;ldquo;中数据是数据规模，以边为单位&lt;/li&gt;
&lt;li&gt;表中数据是批量插入的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB插入amazon0601数据集的300w条边，花费14.076s，速度约为21w edges/s&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;结论&#34;&gt;结论&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;RocksDB和Memory后端插入性能优于Cassandra&lt;/li&gt;
&lt;li&gt;HugeGraph和Titan同样使用Cassandra作为后端的情况下，插入性能接近&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;22-遍历性能&#34;&gt;2.2 遍历性能&lt;/h4&gt;
&lt;h5 id=&#34;221-术语说明&#34;&gt;2.2.1 术语说明&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;FN(Find Neighbor), 遍历所有vertex, 根据vertex查邻接edge, 通过edge和vertex查other vertex&lt;/li&gt;
&lt;li&gt;FA(Find Adjacent), 遍历所有edge，根据edge获得source vertex和target vertex&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;222-fn性能&#34;&gt;2.2.2 FN性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(3.6w)&lt;/th&gt;
&lt;th&gt;amazon0601(40w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(120w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;7.724&lt;/td&gt;
&lt;td&gt;70.935&lt;/td&gt;
&lt;td&gt;128.884&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RocksDB&lt;/td&gt;
&lt;td&gt;8.876&lt;/td&gt;
&lt;td&gt;65.852&lt;/td&gt;
&lt;td&gt;63.388&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cassandra&lt;/td&gt;
&lt;td&gt;13.125&lt;/td&gt;
&lt;td&gt;126.959&lt;/td&gt;
&lt;td&gt;102.580&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;22.309&lt;/td&gt;
&lt;td&gt;207.411&lt;/td&gt;
&lt;td&gt;165.609&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;rdquo;（）&amp;ldquo;中数据是数据规模，以顶点为单位&lt;/li&gt;
&lt;li&gt;表中数据是遍历顶点花费的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB后端遍历amazon0601的所有顶点，并查找邻接边和另一顶点，总共耗时65.852s&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;223-fa性能&#34;&gt;2.2.3 FA性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(30w)&lt;/th&gt;
&lt;th&gt;amazon0601(300w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(300w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;7.119&lt;/td&gt;
&lt;td&gt;63.353&lt;/td&gt;
&lt;td&gt;115.633&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RocksDB&lt;/td&gt;
&lt;td&gt;6.032&lt;/td&gt;
&lt;td&gt;64.526&lt;/td&gt;
&lt;td&gt;52.721&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cassandra&lt;/td&gt;
&lt;td&gt;9.410&lt;/td&gt;
&lt;td&gt;102.766&lt;/td&gt;
&lt;td&gt;94.197&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;12.340&lt;/td&gt;
&lt;td&gt;195.444&lt;/td&gt;
&lt;td&gt;140.89&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;rdquo;（）&amp;ldquo;中数据是数据规模，以边为单位&lt;/li&gt;
&lt;li&gt;表中数据是遍历边花费的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB后端遍历amazon0601的所有边，并查询每条边的两个顶点，总共耗时64.526s&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;结论-1&#34;&gt;结论&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph RocksDB &amp;gt; Titan thrift+Cassandra &amp;gt; HugeGraph Cassandra &amp;gt; HugeGraph Memory&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;23-hugegraph-图常用分析方法性能&#34;&gt;2.3 HugeGraph-图常用分析方法性能&lt;/h4&gt;
&lt;h5 id=&#34;术语说明&#34;&gt;术语说明&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;FS(Find Shortest Path), 寻找最短路径&lt;/li&gt;
&lt;li&gt;K-neighbor，从起始vertex出发，通过K跳边能够到达的所有顶点, 包括1, 2, 3&amp;hellip;(K-1), K跳边可达vertex&lt;/li&gt;
&lt;li&gt;K-out, 从起始vertex出发，恰好经过K跳out边能够到达的顶点&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;fs性能&#34;&gt;FS性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Backend&lt;/th&gt;
&lt;th&gt;email-enron(30w)&lt;/th&gt;
&lt;th&gt;amazon0601(300w)&lt;/th&gt;
&lt;th&gt;com-youtube.ungraph(300w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;11.333&lt;/td&gt;
&lt;td&gt;0.313&lt;/td&gt;
&lt;td&gt;376.06&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RocksDB&lt;/td&gt;
&lt;td&gt;44.391&lt;/td&gt;
&lt;td&gt;2.221&lt;/td&gt;
&lt;td&gt;268.792&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cassandra&lt;/td&gt;
&lt;td&gt;39.845&lt;/td&gt;
&lt;td&gt;3.337&lt;/td&gt;
&lt;td&gt;331.113&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;35.638&lt;/td&gt;
&lt;td&gt;2.059&lt;/td&gt;
&lt;td&gt;388.987&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表头&amp;rdquo;（）&amp;ldquo;中数据是数据规模，以边为单位&lt;/li&gt;
&lt;li&gt;表中数据是找到&lt;strong&gt;从第一个顶点出发到达随机选择的100个顶点的最短路径&lt;/strong&gt;的时间，单位是s&lt;/li&gt;
&lt;li&gt;例如，HugeGraph使用RocksDB查找第一个顶点到100个随机顶点的最短路径，总共耗时2.059s&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;结论-2&#34;&gt;结论&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;在数据规模小或者顶点关联关系少的场景下，Titan最短路径性能优于HugeGraph&lt;/li&gt;
&lt;li&gt;随着数据规模增大且顶点的关联度增高，HugeGraph最短路径性能优于Titan&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;k-neighbor性能&#34;&gt;K-neighbor性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;顶点&lt;/th&gt;
&lt;th&gt;深度&lt;/th&gt;
&lt;th&gt;一度&lt;/th&gt;
&lt;th&gt;二度&lt;/th&gt;
&lt;th&gt;三度&lt;/th&gt;
&lt;th&gt;四度&lt;/th&gt;
&lt;th&gt;五度&lt;/th&gt;
&lt;th&gt;六度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.031s&lt;/td&gt;
&lt;td&gt;0.033s&lt;/td&gt;
&lt;td&gt;0.048s&lt;/td&gt;
&lt;td&gt;0.500s&lt;/td&gt;
&lt;td&gt;11.27s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.027s&lt;/td&gt;
&lt;td&gt;0.034s&lt;/td&gt;
&lt;td&gt;0.115&lt;/td&gt;
&lt;td&gt;1.36s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.039s&lt;/td&gt;
&lt;td&gt;0.027s&lt;/td&gt;
&lt;td&gt;0.052s&lt;/td&gt;
&lt;td&gt;0.511s&lt;/td&gt;
&lt;td&gt;10.96s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph-Server的JVM内存设置为32GB，数据量过大时会出现OOM&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;k-out性能&#34;&gt;K-out性能&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;顶点&lt;/th&gt;
&lt;th&gt;深度&lt;/th&gt;
&lt;th&gt;一度&lt;/th&gt;
&lt;th&gt;二度&lt;/th&gt;
&lt;th&gt;三度&lt;/th&gt;
&lt;th&gt;四度&lt;/th&gt;
&lt;th&gt;五度&lt;/th&gt;
&lt;th&gt;六度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.054s&lt;/td&gt;
&lt;td&gt;0.057s&lt;/td&gt;
&lt;td&gt;0.109s&lt;/td&gt;
&lt;td&gt;0.526s&lt;/td&gt;
&lt;td&gt;3.77s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;度&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;133&lt;/td&gt;
&lt;td&gt;2453&lt;/td&gt;
&lt;td&gt;50,830&lt;/td&gt;
&lt;td&gt;1,128,688&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.032s&lt;/td&gt;
&lt;td&gt;0.042s&lt;/td&gt;
&lt;td&gt;0.136s&lt;/td&gt;
&lt;td&gt;1.25s&lt;/td&gt;
&lt;td&gt;20.62s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;度&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;211&lt;/td&gt;
&lt;td&gt;4944&lt;/td&gt;
&lt;td&gt;113150&lt;/td&gt;
&lt;td&gt;2,629,970&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1111&lt;/td&gt;
&lt;td&gt;时间&lt;/td&gt;
&lt;td&gt;0.039s&lt;/td&gt;
&lt;td&gt;0.045s&lt;/td&gt;
&lt;td&gt;0.053s&lt;/td&gt;
&lt;td&gt;1.10s&lt;/td&gt;
&lt;td&gt;2.92s&lt;/td&gt;
&lt;td&gt;OOM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;度&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;2555&lt;/td&gt;
&lt;td&gt;50825&lt;/td&gt;
&lt;td&gt;1,070,230&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph-Server的JVM内存设置为32GB，数据量过大时会出现OOM&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;结论-3&#34;&gt;结论&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;FS场景，HugeGraph性能优于Titan&lt;/li&gt;
&lt;li&gt;K-neighbor和K-out场景，HugeGraph能够实现在5度范围内秒级返回结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;24-图综合性能测试-cw&#34;&gt;2.4 图综合性能测试-CW&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据库&lt;/th&gt;
&lt;th&gt;规模1000&lt;/th&gt;
&lt;th&gt;规模5000&lt;/th&gt;
&lt;th&gt;规模10000&lt;/th&gt;
&lt;th&gt;规模20000&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Titan&lt;/td&gt;
&lt;td&gt;45.943&lt;/td&gt;
&lt;td&gt;849.168&lt;/td&gt;
&lt;td&gt;2737.117&lt;/td&gt;
&lt;td&gt;9791.46&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory(core)&lt;/td&gt;
&lt;td&gt;41.077&lt;/td&gt;
&lt;td&gt;1825.905&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cassandra（core）&lt;/td&gt;
&lt;td&gt;39.783&lt;/td&gt;
&lt;td&gt;862.744&lt;/td&gt;
&lt;td&gt;2423.136&lt;/td&gt;
&lt;td&gt;6564.191&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RcoksDB（core）&lt;/td&gt;
&lt;td&gt;33.383&lt;/td&gt;
&lt;td&gt;199.894&lt;/td&gt;
&lt;td&gt;763.869&lt;/td&gt;
&lt;td&gt;1677.813&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;规模&amp;quot;以顶点为单位&lt;/li&gt;
&lt;li&gt;表中数据是社区发现完成需要的时间，单位是s，例如HugeGraph使用RocksDB后端在规模10000的数据集，社区聚合不再变化，需要耗时763.869s&lt;/li&gt;
&lt;li&gt;&amp;ldquo;*&amp;ldquo;表示超过10000s未完成&lt;/li&gt;
&lt;li&gt;CW测试是CRUD的综合评估&lt;/li&gt;
&lt;li&gt;后三者分别是HugeGraph的不同后端，该测试中HugeGraph跟Titan一样，没有通过client，直接对core操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;结论-4&#34;&gt;结论&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;HugeGraph在使用Cassandra后端时，性能略优于Titan，随着数据规模的增大，优势越来越明显，数据规模20000时，比Titan快30%&lt;/li&gt;
&lt;li&gt;HugeGraph在使用RocksDB后端时，性能远高于Titan和HugeGraph的Cassandra后端，分别比两者快了6倍和4倍&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
