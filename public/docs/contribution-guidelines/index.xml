<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HugeGraph â€“ Contribution Guidelines</title>
    <link>/docs/contribution-guidelines/</link>
    <description>Recent content in Contribution Guidelines on HugeGraph</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/contribution-guidelines/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: How to Contribute to HugeGraph</title>
      <link>/docs/contribution-guidelines/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/contribution-guidelines/contribute/</guid>
      <description>
        
        
        &lt;p&gt;Thanks for taking the time to contribute! As an open source project, HugeGraph is looking forward to be contributed from everyone, and we are also grateful to all of the contributors.&lt;/p&gt;
&lt;p&gt;The following is a contribution guide for HugeGraph:&lt;/p&gt;
&lt;img width=&#34;884&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/9625821/159643158-8bf72c0a-93c3-4a58-8912-7b2ab20ced1d.png&#34;&gt;
&lt;h2 id=&#34;1-preparation&#34;&gt;1. Preparation&lt;/h2&gt;
&lt;p&gt;We can contribute by reporting issues, submitting code patches or any other feedback.&lt;/p&gt;
&lt;p&gt;Before submitting the code, we need to do some preparation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Sign up or login to GitHub:  &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fork HugeGraph repo from GitHub: &lt;a href=&#34;https://github.com/hugegraph/hugegraph/fork&#34;&gt;https://github.com/apache/incubator-hugegraph/fork&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone code from fork repo to local: &lt;a href=&#34;https://github.com/$%7BGITHUB_USER_NAME%7D/hugegraph&#34;&gt;https://github.com/${GITHUB_USER_NAME}/hugegraph&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# clone code from remote to local repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GITHUB_USER_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;/hugegraph
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure local HugeGraph repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; hugegraph
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# add upstream to synchronize the latest code&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add hugegraph https://github.com/hugegraph/hugegraph
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# set name and email to push code to github&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config user.name &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{full-name}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# like &amp;#34;Jermy Li&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config user.email &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{email-address-of-github}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# like &amp;#34;jermy@apache.org&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Optional: You can use &lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub desktop&lt;/a&gt; to greatly simplify the commit and update process.&lt;/p&gt;
&lt;h2 id=&#34;2-create-an-issue-on-github&#34;&gt;2. Create an Issue on GitHub&lt;/h2&gt;
&lt;p&gt;If you encounter bugs or have any questions, please go to &lt;a href=&#34;https://github.com/apache/incubator-hugegraph/issues&#34;&gt;GitHub Issues&lt;/a&gt; to report them and feel free to &lt;a href=&#34;https://github.com/hugegraph/hugegraph/issues/new&#34;&gt;create an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;3-make-changes-of-code-locally&#34;&gt;3. Make changes of code locally&lt;/h2&gt;
&lt;h4 id=&#34;31-create-a-new-branch&#34;&gt;3.1 Create a new branch&lt;/h4&gt;
&lt;p&gt;Please don&amp;rsquo;t use master branch for development. Instead we should create a new branch:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# checkout master branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout master
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pull the latest code from official hugegraph&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull hugegraph
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create new branch: bugfix-branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout -b bugfix-branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;32-change-the-code&#34;&gt;3.2 Change the code&lt;/h4&gt;
&lt;p&gt;Assume that we need to modify some files like &amp;ldquo;HugeGraph.java&amp;rdquo; and &amp;ldquo;HugeFactory.java&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# modify code to fix a bug&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim hugegraph-core/src/main/java/com/baidu/hugegraph/HugeGraph.java
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim hugegraph-core/src/main/java/com/baidu/hugegraph/HugeFactory.java
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# run test locally (optional)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mvn &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt; -Pcore-test,memory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: In order to be consistent with the code style easily, if you use &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IDEA&lt;/a&gt; as your IDE, you can directly &lt;a href=&#34;https://www.jetbrains.com/help/idea/configuring-code-style.html&#34;&gt;import&lt;/a&gt; our code style &lt;a href=&#34;./hugegraph-style.xml&#34;&gt;configuration file&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;33-commit-changes-to-git-repo&#34;&gt;3.3 Commit changes to git repo&lt;/h4&gt;
&lt;p&gt;After the code has been completed, we submit them to the local git repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# add files to local git index&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add hugegraph-core/src/main/java/com/baidu/hugegraph/HugeGraph.java
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add hugegraph-core/src/main/java/com/baidu/hugegraph/HugeFactory.java
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# commit to local git repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Please edit the commit message after running &lt;code&gt;git commit&lt;/code&gt;, we can explain what and how to fix a bug or implement a feature, the following is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fix bug: run deploy multiple &lt;span style=&#34;color:#204a87&#34;&gt;times&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fix &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#ISSUE_ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Please remember to fill in the issue id, which was generated by GitHub after issue creation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;34-push-commit-to-github-fork-repo&#34;&gt;3.4 Push commit to GitHub fork repo&lt;/h4&gt;
&lt;p&gt;Push the local commit to GitHub fork repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# push the local commit to fork repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin bugfix-branch:bugfix-branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that since GitHub requires submitting code through &lt;code&gt;username + token&lt;/code&gt; (instead of using &lt;code&gt;username + password&lt;/code&gt; directly), you need to create a GitHub token from &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;https://github.com/settings/tokens&lt;/a&gt;:
&lt;img width=&#34;1280&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/9625821/163524204-7fe0e6bf-9c8b-4b1a-ac65-6a0ac423eb16.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-create-a-pull-request&#34;&gt;4. Create a Pull Request&lt;/h2&gt;
&lt;p&gt;Go to the web page of GitHub fork repo, there would be a chance to create a Pull Request after pushing to a new branch, just click button &amp;ldquo;Compare &amp;amp; pull request&amp;rdquo; to do it. Then edit the description for proposed changes, which can just be copied from the commit message.&lt;/p&gt;
&lt;p&gt;Please sign the HugeGraph CLA when contributing code for the first time. You can sign the CLA by just posting a Pull Request Comment same as the below format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;I have read the CLA Document and I hereby sign the CLA&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note: please make sure the email address you used to submit the code is bound to the GitHub account. For how to bind the email address, please refer to &lt;a href=&#34;https://github.com/settings/emails&#34;&gt;https://github.com/settings/emails&lt;/a&gt;:
&lt;img width=&#34;1280&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/9625821/163522445-2a50a72a-dea2-434f-9868-3a0d40d0d037.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-code-review&#34;&gt;5. Code review&lt;/h2&gt;
&lt;p&gt;Maintainers will start the code review after all the &lt;strong&gt;automatic&lt;/strong&gt; checks are passed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check: Contributor License Agreement is signed&lt;/li&gt;
&lt;li&gt;Check: Travis CI builds is passed (automatically Test and Deploy)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The commit will be accepted and merged if there is no problem after review.&lt;/p&gt;
&lt;p&gt;Please click on &amp;ldquo;Details&amp;rdquo; to find the problem if any check does not pass.&lt;/p&gt;
&lt;p&gt;If there are checks not passed or changes requested, then continue to modify the code and push again.&lt;/p&gt;
&lt;h2 id=&#34;6-further-changes-after-review&#34;&gt;6. Further changes after review&lt;/h2&gt;
&lt;p&gt;If we have not passed the review, don&amp;rsquo;t be discouraged. Usually a commit needs to be reviewed several times before being accepted! Please follow the review comments and make further changes.&lt;/p&gt;
&lt;p&gt;After the further changes, we submit them to the local repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# commit all updated files in a new commit,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# please feel free to enter any appropriate commit message, note that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# we will squash all commits in the pull request as one commit when&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# merging into the master branch.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;If there are conflicts that prevent the code from being merged, we need to rebase on master branch:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# synchronize the latest code&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout master
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull hugegraph
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# rebase on master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout bugfix-branch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rebase -i master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;And push it to GitHub fork repo again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# force push the local commit to fork repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -f origin bugfix-branch:bugfix-branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GitHub will automatically update the Pull Request after we push it, just wait for code review.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Subscribe Mailing Lists</title>
      <link>/docs/contribution-guidelines/subscribe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/contribution-guidelines/subscribe/</guid>
      <description>
        
        
        &lt;p&gt;It is highly recommended to subscribe to the development mailing list to keep up-to-date with the community.&lt;/p&gt;
&lt;p&gt;In the process of using HugeGraph, if you have any questions or ideas, suggestions, you can participate in the HugeGraph community building through the Apache mailing list. Sending a subscription email is also very simple, the steps are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Send an email to &lt;a href=&#34;mailto:dev-subscribe@hugegraph.apache.org&#34;&gt;dev-subscribe@hugegraph.apache.org&lt;/a&gt; with your own email address, subject and content are arbitrary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Receive confirmation email and reply. After completing step 1, you will receive a confirmation email from &lt;a href=&#34;mailto:dev-help@hugegraph.apache.org&#34;&gt;dev-help@hugegraph.apache.org&lt;/a&gt; (if not received, please confirm whether the email is automatically classified as spam, promotion email, subscription email, etc.) . Then reply directly to the email, or click on the link in the email to reply quickly, the subject and content are arbitrary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Receive a welcome email. After completing the above steps, you will receive a welcome email with the subject WELCOME to &lt;a href=&#34;mailto:dev@hugegraph.apache.org&#34;&gt;dev@hugegraph.apache.org&lt;/a&gt;, and you have successfully subscribed to the Apache HugeGraph mailing list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;unsubscribe-mailing-lists&#34;&gt;Unsubscribe Mailing Lists&lt;/h1&gt;
&lt;p&gt;If you do not need to know what&amp;rsquo;s going on with HugeGraph, you can unsubscribe from the mailing list.&lt;/p&gt;
&lt;p&gt;Unsubscribe from the mailing list steps are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Send an email to &lt;a href=&#34;mailto:dev-unsubscribe@hugegraph.apache.org&#34;&gt;dev-unsubscribe@hugegraph.apache.org&lt;/a&gt; with your subscribed email address, subject and content are arbitrary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Receive confirmation email and reply. After completing step 1, you will receive a confirmation email from &lt;a href=&#34;mailto:dev-help@hugegraph.apache.org&#34;&gt;dev-help@hugegraph.apache.org&lt;/a&gt; (if not received, please confirm whether the email is automatically classified as spam, promotion email, subscription email, etc.) . Then reply directly to the email, or click on the link in the email to reply quickly, the subject and content are arbitrary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Receive a goodbye email. After completing the above steps, you will receive a goodbye email with the subject GOODBYE from &lt;a href=&#34;mailto:dev@hugegraph.apache.org&#34;&gt;dev@hugegraph.apache.org&lt;/a&gt;, and you have successfully unsubscribed to the Apache HugeGraph mailing list, and you will not receive emails from &lt;a href=&#34;mailto:dev@hugegraph.apache.org&#34;&gt;dev@hugegraph.apache.org&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
